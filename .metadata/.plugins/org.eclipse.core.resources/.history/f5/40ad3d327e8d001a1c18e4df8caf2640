package cs544.exercise13_1;

import java.util.Date;

import org.aspectj.lang.JoinPoint;
import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.AfterReturning;
import org.aspectj.lang.annotation.Around;
import org.aspectj.lang.annotation.Aspect;
import org.springframework.util.StopWatch;

@Aspect
public class TraceAdvice {
	
	@After("execution(* cs544.exercise13_1.EmailSender.sendEmail(..)) && args(email, message")
	public void test(JoinPoint j, String email, String message) {
		Object args[] = j.getArgs();
		EmailSender es = (EmailSender) j.getTarget();
		System.out.println(new Date().toString() + " "+ "method= " + j.getSignature().getName() + "\naddress=" + email + " message= " + message + "\n" + es.outgoingMailServer);
	}

	@Around("execution(public void cs544.exercise13_1.CustomerDAO.save(..))")
    public Object invoke(ProceedingJoinPoint call) throws Throwable {
        StopWatch sw = new StopWatch();
        sw.start(call.getSignature().getName());
        Object retVal = call.proceed();
        sw.stop();

        long totaltime = sw.getLastTaskTimeMillis();
        System.out.println("Time to Execute save = " + totaltime + " ms ");

        return retVal;
    }
//	@AfterReturning(pointcut = "execution(* cs544.exercise13_1.CustomerService.getName(..))", returning = "retValue")
//	public void tracemethod(JoinPoint joinpoint, String retValue) {
//		System.out.println("Test");
//		System.out.println("CustomerDAO: saving customer " + retValue);
//		System.out.println(" sending 'Welcome " + retValue + " as a new customer' to");
//	}
}
